#############################################
#                                           #
# CMake script for configuration of DEMODEL #
#                                           #
#############################################

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

PROJECT("demodel")

#debug flag
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")

#name of executable and source files from which executable is compiled
SET(DEMODEL_TARGET ${PROJECT_NAME})
SET(_target ${DEMODEL_TARGET})
SET(_target_src		src/demodel.cc)

#includes
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)

#set up the target
ADD_LIBRARY(${_target} SHARED ${_target_src})

#add external libraries
FIND_PACKAGE(cmf QUIET HINTS $ENV{CMF_DIR} ${CMF_DIR})
IF(NOT ${cmf_FOUND})
  MESSAGE(FATAL_ERROR "\n"
    "*** Could not locate a (sufficiently recent) version of the CMF library. ***\n\n"
    "You may want to either pass a flag -DCMF_DIR=/path/to/cmf to cmake\n"
    "or set an environment variable \"CMF_DIR\" that contains this path."
    )
ENDIF()
TARGET_LINK_LIBRARIES(${_target} ${CMF_LIBRARIES})
INCLUDE_DIRECTORIES (${CMF_INSTALL_PATH_HEADERS})

IF(NOT EIGEN3_DIR)
	MESSAGE( FATAL_ERROR "Eigen not found. Please pass the flag -DEIGEN3_DIR=/path/to/eigen to cmake")
ENDIF()
INCLUDE_DIRECTORIES (${EIGEN3_DIR})


#config files
SET(DEMODEL_INSTALL_PATH_HEADERS ${CMAKE_INSTALL_PREFIX}/include)
IF (WIN32)
  SET(DEMODEL_INSTALL_PATH_LIBRARIES ${CMAKE_INSTALL_PREFIX}/bin)
  SET(DEMODEL_LIBRARIES "${DEMODEL_INSTALL_PATH_LIBRARIES}/lib${DEMODEL_TARGET}.dll")
ELSE()
  SET(DEMODEL_INSTALL_PATH_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
  SET(DEMODEL_LIBRARIES "${DEMODEL_INSTALL_PATH_LIBRARIES}/lib${DEMODEL_TARGET}.so")
ENDIF()
SET(DEMODEL_INSTALL_PATH_CMAKE ${CMAKE_INSTALL_PREFIX}/lib)

SET(DEMODEL_INCLUDE_DIRECTORIES "${DEMODEL_INSTALL_PATH_HEADERS}")

GET_PROPERTY(INCLUDE_DIRECTORIES_ DIRECTORY PROPERTY INCLUDE_DIRECTORIES)
FOREACH(INCLUDE_DIRECTORY ${INCLUDE_DIRECTORIES_})
  FILE(TO_CMAKE_PATH "${INCLUDE_DIRECTORY}" INCLUDE_DIRECTORY_)
  STRING(APPEND DEMODEL_INCLUDE_DIRECTORIES ";${INCLUDE_DIRECTORY_}")
ENDFOREACH(INCLUDE_DIRECTORY)

GET_TARGET_PROPERTY(LINK_LIBRARIES_ ${_target} LINK_LIBRARIES)
FOREACH(LINK_LIBRARY ${LINK_LIBRARIES_})
  STRING(APPEND DEMODEL_LIBRARIES "\\\;${LINK_LIBRARY}")
ENDFOREACH(LINK_LIBRARY)

CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/config/Config.cmake.in "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${DEMODEL_TARGET}Config.cmake" @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/config/ConfigVersion.cmake.in "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${DEMODEL_TARGET}ConfigVersion.cmake" @ONLY)

#install
INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/include/demodel DESTINATION ${DEMODEL_INSTALL_PATH_HEADERS} FILES_MATCHING PATTERN "*.h")
INSTALL(FILES ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${DEMODEL_TARGET}Config.cmake DESTINATION ${DEMODEL_INSTALL_PATH_CMAKE}/cmake/${DEMODEL_TARGET}/)
INSTALL(FILES ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${DEMODEL_TARGET}ConfigVersion.cmake DESTINATION ${DEMODEL_INSTALL_PATH_CMAKE}/cmake/${DEMODEL_TARGET}/)
INSTALL(TARGETS ${_target} LIBRARY DESTINATION ${DEMODEL_INSTALL_PATH_LIBRARIES})

IF (WIN32)
  ADD_CUSTOM_COMMAND(TARGET ${_target} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_BINARY_DIR}/lib${DEMODEL_TARGET}.dll ${PROJECT_BINARY_DIR}/tests/lib${DEMODEL_TARGET}.dll)
  ADD_CUSTOM_COMMAND(TARGET ${_target} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${CMF_INSTALL_PATH_LIBRARIES}/lib${CMF_TARGET}.dll ${PROJECT_BINARY_DIR}/tests/lib${CMF_TARGET}.dll)
ENDIF()

#tests
ENABLE_TESTING()
ADD_SUBDIRECTORY(tests)